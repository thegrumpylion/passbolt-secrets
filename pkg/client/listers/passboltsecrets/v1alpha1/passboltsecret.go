/*
The License
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/thegrumpylion/passbolt-secrets/pkg/apis/passboltsecrets/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PassboltSecretLister helps list PassboltSecrets.
// All objects returned here must be treated as read-only.
type PassboltSecretLister interface {
	// List lists all PassboltSecrets in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PassboltSecret, err error)
	// PassboltSecrets returns an object that can list and get PassboltSecrets.
	PassboltSecrets(namespace string) PassboltSecretNamespaceLister
	PassboltSecretListerExpansion
}

// passboltSecretLister implements the PassboltSecretLister interface.
type passboltSecretLister struct {
	indexer cache.Indexer
}

// NewPassboltSecretLister returns a new PassboltSecretLister.
func NewPassboltSecretLister(indexer cache.Indexer) PassboltSecretLister {
	return &passboltSecretLister{indexer: indexer}
}

// List lists all PassboltSecrets in the indexer.
func (s *passboltSecretLister) List(selector labels.Selector) (ret []*v1alpha1.PassboltSecret, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PassboltSecret))
	})
	return ret, err
}

// PassboltSecrets returns an object that can list and get PassboltSecrets.
func (s *passboltSecretLister) PassboltSecrets(namespace string) PassboltSecretNamespaceLister {
	return passboltSecretNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PassboltSecretNamespaceLister helps list and get PassboltSecrets.
// All objects returned here must be treated as read-only.
type PassboltSecretNamespaceLister interface {
	// List lists all PassboltSecrets in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PassboltSecret, err error)
	// Get retrieves the PassboltSecret from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PassboltSecret, error)
	PassboltSecretNamespaceListerExpansion
}

// passboltSecretNamespaceLister implements the PassboltSecretNamespaceLister
// interface.
type passboltSecretNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PassboltSecrets in the indexer for a given namespace.
func (s passboltSecretNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PassboltSecret, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PassboltSecret))
	})
	return ret, err
}

// Get retrieves the PassboltSecret from the indexer for a given namespace and name.
func (s passboltSecretNamespaceLister) Get(name string) (*v1alpha1.PassboltSecret, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("passboltsecret"), name)
	}
	return obj.(*v1alpha1.PassboltSecret), nil
}
